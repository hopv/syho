--------------------------------------------------------------------------------
-- Prove the semantic soundness of the partial and total Hoare triples
--------------------------------------------------------------------------------

{-# OPTIONS --without-K --sized-types #-}

module Syho.Model.Hor.Sound where

open import Base.Size using (Size; Рѕъ; !)
open import Base.Func using (_$_; _Рќи_; _Рђ║_)
open import Base.Few using (absurd)
open import Base.Prod using (_,_; -,_; РѕЉ-case)
open import Base.Nat using (РёЋ)
open import Base.List using (List; []; _Рѕи_; rep)
open import Syho.Lang.Expr using (Addr; _Рѓњ_; Type; Val; TyVal)
open import Syho.Lang.Ktxred using (Val/Ktxred)
open import Syho.Logic.Prop using (Prop'; _Рєд_; [РѕЌРѕѕРЂ▒РЪеРЪЕ]-syntax)
open import Syho.Logic.Core using (_┬╗_; РѕЃ-elim)
open import Syho.Logic.Ind using (РєфРЪеРЪЕр┤Й-use; РєфРЪеРЪЕрхђ-use)
open import Syho.Logic.Hor using (_Ріб[_]РЂ║РЪе_РЪЕр┤Й_; _Ріб[_]РЂ║РЪе_РЪЕрхђ[_]_; hor-рхђРЄњр┤Й; horрхђ-р╣А;
  _рхў┬╗╩░_; _╩░┬╗рхў_; hor-frame╦А; hor-bind; hor-valрхў; hor-nd; horр┤Й-РќХ; horрхђ-РќХ; hor-РЌЂ;
  hor-РЂЈ; hor-fork)
open import Syho.Logic.Mem using (hor-­Ъъ░; hor-Рєљ; hor-alloc; hor-free)
open import Syho.Model.Prop.Base using (_Ріе_; РѕЌрхњ-mono╦А; РѕЌрхњ-mono╩│; РѕЌрхњРѕЃрхњ-out;
  [РѕЌрхњРѕѕРЂ▒РЪеРЪЕ]-syntax; РѕЌрхњ-mono)
open import Syho.Model.Prop.Mem using (_Рєдрхњ_)
open import Syho.Model.Prop.Interp using (РИе_РИЕ)
open import Syho.Model.Prop.Sound using (Ріб-sem)
open import Syho.Model.Supd.Ind using (РєфРЪеРЪЕр┤Йрхњ-use; РєфРЪеРЪЕрхђрхњ-use)
open import Syho.Model.Supd.Interp using (РЄЏр┤хРЂ┐рхѕРЄњРЄЏрхњ; РЄЏрхњ-mono; РЄЏрхњ-eat╦А)
open import Syho.Model.Supd.Sound using (РібРЄЏ-sem)
open import Syho.Model.Hor.Wp using (РЂ║РЪе_РЪЕр┤Йрхњ[_]_; РЂ║РЪе_РЪЕрхђрхњ[_]_; РЂ║РЪеРЪЕр┤Йрхњ-val;
  РЂ║РЪеРЪЕрхђрхњ-val; РЂ║РЪеРЪЕр┤Йрхњ-mono; РЂ║РЪеРЪЕрхђрхњ-mono; РЂ║РЪеРЪЕр┤ЙрхњРЄњРЂ║РЪеРЪЕр┤ЙрхњРіц; РЂ║РЪеРЪЕрхђрхњРЄњРЂ║РЪеРЪЕрхђрхњРіц; РЂ║РЪеРЪЕрхђрхњРЄњРЂ║РЪеРЪЕр┤Йрхњ;
  РЄЏрхњ-РЂ║РЪеРЪЕр┤Йрхњ; РЄЏрхњ-РЂ║РЪеРЪЕрхђрхњ; РіеРюЊРЄњРіе-РЂ║РЪеРЪЕр┤Йрхњ; РіеРюЊРЄњРіе-РЂ║РЪеРЪЕрхђрхњ; РЂ║РЪеРЪЕр┤Йрхњ-РЄЏрхњ; РЂ║РЪеРЪЕрхђрхњ-РЄЏрхњ; РЂ║РЪеРЪЕр┤Йрхњ-eat╦А;
  РЂ║РЪеРЪЕрхђрхњ-eat╦А)
open import Syho.Model.Hor.Lang using (РЪеРЪЕр┤Йрхњ-bind; РЪеРЪЕрхђрхњ-bind; РЂ║РЪеРЪЕр┤Йрхњ-nd; РЂ║РЪеРЪЕрхђрхњ-nd;
  РЂ║РЪеРЪЕр┤Йрхњ-РќХ; РЂ║РЪеРЪЕрхђрхњ-РќХ; РЂ║РЪеРЪЕр┤Йрхњ-РЌЂ; РЂ║РЪеРЪЕрхђрхњ-РЌЂ; РЂ║РЪеРЪЕр┤Йрхњ-РЂЈ; РЂ║РЪеРЪЕрхђрхњ-РЂЈ; РЂ║РЪеРЪЕр┤Йрхњ-fork; РЂ║РЪеРЪЕрхђрхњ-fork)
open import Syho.Model.Hor.Mem using (РЂ║РЪеРЪЕр┤Йрхњ-­Ъъ░; РЂ║РЪеРЪЕрхђрхњ-­Ъъ░; РЂ║РЪеРЪЕр┤Йрхњ-Рєљ; РЂ║РЪеРЪЕрхђрхњ-Рєљ;
  РЂ║РЪеРЪЕр┤Йрхњ-alloc; РЂ║РЪеРЪЕрхђрхњ-alloc; РЂ║РЪеРЪЕр┤Йрхњ-free; РЂ║РЪеРЪЕрхђрхњ-free)

private variable
  ╬╣ :  Size
  T :  Type
  P :  Prop' Рѕъ
  Q╦Ў :  Val T Рєњ  Prop' Рѕъ
  vk :  Val/Ktxred T
  i k :  РёЋ
  ╬И :  Addr
  рхЌvs :  List TyVal

--------------------------------------------------------------------------------
-- Lemmas on Рєдр┤И

abstract

  -- РИе ╬И Рєдр┤И рхЌvs РИЕ agrees with ╬И Рєдр┤Ирхњ рхЌvs
  -- For induction we use the unfolded versions with РѕѕРЂ▒РЪе k РЪЕ

  Рєдр┤ИРЄњРєдр┤Ирхњ :  РИе [РѕЌ (i , рхЌv) РѕѕРЂ▒РЪе k РЪЕ рхЌvs ] ╬И Рѓњ i Рєд рхЌv РИЕ  Ріе
            [РѕЌрхњ (i , рхЌv) РѕѕРЂ▒РЪе k РЪЕ рхЌvs ] ╬И Рѓњ i Рєдрхњ рхЌv
  Рєдр┤ИРЄњРєдр┤Ирхњ {рхЌvs = []} =  _
  Рєдр┤ИРЄњРєдр┤Ирхњ {рхЌvs = _ Рѕи рхЌvs'} =  РѕЌрхњ-mono╩│ $ Рєдр┤ИРЄњРєдр┤Ирхњ {рхЌvs = рхЌvs'}

  Рєдр┤ИрхњРЄњРєдр┤И :  [РѕЌрхњ (i , рхЌv) РѕѕРЂ▒РЪе k РЪЕ рхЌvs ] ╬И Рѓњ i Рєдрхњ рхЌv  Ріе
            РИе [РѕЌ (i , рхЌv) РѕѕРЂ▒РЪе k РЪЕ рхЌvs ] ╬И Рѓњ i Рєд рхЌv РИЕ
  Рєдр┤ИрхњРЄњРєдр┤И {рхЌvs = []} _ =  absurd
  Рєдр┤ИрхњРЄњРєдр┤И {рхЌvs = _ Рѕи рхЌvs'} =  РѕЌрхњ-mono╩│ $ Рєдр┤ИрхњРЄњРєдр┤И {рхЌvs = рхЌvs'}

--------------------------------------------------------------------------------
-- РібРЂ║РЪеРЪЕрхђ-sem :  Semantic soundness of the total Hoare triple

abstract

  РібРЂ║РЪеРЪЕрхђ-sem :
    P  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕрхђ[ i ]  Q╦Ў  Рєњ   РИе P РИЕ  Ріе  РЂ║РЪе vk РЪЕрхђрхњ[ Рѕъ ] ╬╗ v Рєњ РИе Q╦Ў v РИЕ

  -- _┬╗_ :  P Ріб[ Рѕъ ] Q Рєњ  Q Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕрхђ[ i ] R╦Ў Рєњ  P Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕрхђ[ i ] R╦Ў

  РібРЂ║РЪеРЪЕрхђ-sem (PРібQ ┬╗ QРібРЪеvkРЪЕR) =
    РіеРюЊРЄњРіе-РЂ║РЪеРЪЕрхђрхњ ╬╗ РюЊРѕЎ Рєњ Ріб-sem PРібQ РюЊРѕЎ Рђ║ РібРЂ║РЪеРЪЕрхђ-sem QРібРЪеvkРЪЕR

  -- РѕЃ-elim :  (Рѕђ x Рєњ  P╦Ў x Ріб[ Рѕъ ][ i ]РЄЏ Q) Рєњ  РѕЃ╦Ў P╦Ў Ріб[ Рѕъ ][ i ]РЄЏ Q

  РібРЂ║РЪеРЪЕрхђ-sem (РѕЃ-elim PxРібРЪеvkРЪЕQ) =   РѕЉ-case ╬╗ x Рєњ РібРЂ║РЪеРЪЕрхђ-sem (PxРібРЪеvkРЪЕQ x)

  -- РєфРЪеРЪЕрхђ-use :  P╦ѓ .! РѕЌ (P╦ѓ РєфРЪе e РЪЕрхђ[ i ] Q╦ѓ╦Ў)
  --               Ріб[ Рѕъ ]РЪе ┬А e РЪЕрхђ[ р╣А i ] ╬╗ v Рєњ  Q╦ѓ╦Ў v .!
  -- The counter increment р╣А i makes the recursive call of РібРЂ║РЪеРЪЕрхђ-sem inductive

  РібРЂ║РЪеРЪЕрхђ-sem РєфРЪеРЪЕрхђ-use big =  РЄЏрхњ-РЂ║РЪеРЪЕрхђрхњ ╬╗ _ Рєњ big Рќи
    РѕЌрхњ-mono╩│ (РєфРЪеРЪЕрхђрхњ-use Рђ║ РЄЏр┤хРЂ┐рхѕРЄњРЄЏрхњ) Рќи РЄЏрхњ-eat╦А Рќи РЄЏрхњ-mono $ РѕЌрхњРѕЃрхњ-out Рђ║ ╬╗ (-, big) Рєњ
    РѕЌрхњРѕЃрхњ-out big Рќи ╬╗ (PРѕЌRРібРЪеeРЪЕQ , PRa) Рєњ РібРЂ║РЪеРЪЕрхђ-sem PРѕЌRРібРЪеeРЪЕQ PRa

  -- horрхђ-р╣А :  P  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕрхђ[ i ]  Q╦Ў  Рєњ   P  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕрхђ[ р╣А i ]  Q╦Ў

  РібРЂ║РЪеРЪЕрхђ-sem (horрхђ-р╣А PРібРЪеvkРЪЕQ) =  РібРЂ║РЪеРЪЕрхђ-sem PРібРЪеvkРЪЕQ

  -- _рхў┬╗╩░_ :  P  Ріб[ Рѕъ ][ i ]РЄЏ  Q  Рєњ   Q  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕрхђ[ i ]  R╦Ў  Рєњ
  --          P  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕрхђ[ i ]  R╦Ў

  РібРЂ║РЪеРЪЕрхђ-sem (PРібРЄЏQ рхў┬╗╩░ QРібРЪеvkРЪЕR) Pa =  РЄЏрхњ-РЂ║РЪеРЪЕрхђрхњ ╬╗ _ Рєњ Pa Рќи РібРЄЏ-sem PРібРЄЏQ Рќи
    РЄЏрхњ-mono $ РібРЂ║РЪеРЪЕрхђ-sem QРібРЪеvkРЪЕR

  -- _╩░┬╗рхў_ :  P  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕрхђ[ i ]  Q╦Ў  Рєњ
  --          (Рѕђ v Рєњ  Q╦Ў v  Ріб[ Рѕъ ][ i ]РЄЏ  R╦Ў v)  Рєњ
  --          P  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕрхђ[ i ]  R╦Ў

  РібРЂ║РЪеРЪЕрхђ-sem (PРібРЪеvkРЪЕQ ╩░┬╗рхў QvРібРЄЏRv) =  РібРЂ║РЪеРЪЕрхђ-sem PРібРЪеvkРЪЕQ Рђ║
    РЂ║РЪеРЪЕрхђрхњ-mono (╬╗ v Qva _ Рєњ РібРЄЏ-sem (QvРібРЄЏRv v) Qva) Рђ║ РЂ║РЪеРЪЕрхђрхњ-РЄЏрхњ

  -- hor-frame╦А :  P  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕрхђ[ i ]  Q╦Ў  Рєњ
  --               R  РѕЌ  P  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕрхђ[ i ] ╬╗ v Рєњ  R  РѕЌ  Q╦Ў v

  РібРЂ║РЪеРЪЕрхђ-sem (hor-frame╦А PРібРЪеvkРЪЕQ) =  РѕЌрхњ-mono╩│ (РібРЂ║РЪеРЪЕрхђ-sem PРібРЪеvkРЪЕQ ) Рђ║ РЂ║РЪеРЪЕрхђрхњ-eat╦А

  -- hor-valрхў :  P  РѕЌ  [ РіцрХ╗ ]р┤║  Ріб[ Рѕъ ][ i ]РЄЏ  Q╦Ў v  РѕЌ  [ РіцрХ╗ ]р┤║  Рєњ
  --             P  Ріб[ ╬╣ ]РЂ║РЪе ─ЕРѓђ v РЪЕрхђ[ i ]  Q╦Ў

  РібРЂ║РЪеРЪЕрхђ-sem (hor-valрхў PРібРЄЏ[Ріц]Qv) Pa =  РЂ║РЪеРЪЕрхђрхњ-val ╬╗ _ Рєњ Pa Рќи РібРЄЏ-sem PРібРЄЏ[Ріц]Qv

  -- hor-bind :  P  Ріб[ Рѕъ ]РЪе e РЪЕрхђ[ i ]  Q╦Ў  Рєњ
  --             (Рѕђ v Рєњ  Q╦Ў v  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ VРЄњE v РЪЕрхђ[ i ]  R╦Ў)  Рєњ
  --             P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ e РЪЕрхђ[ i ]  R╦Ў

  РібРЂ║РЪеРЪЕрхђ-sem (hor-bind PРібРЪеeРЪЕQ QvРібРЪеKvРЪЕR) =  РібРЂ║РЪеРЪЕрхђ-sem PРібРЪеeРЪЕQ Рђ║
    РЂ║РЪеРЪЕрхђрхњ-mono (╬╗ v Рєњ РібРЂ║РЪеРЪЕрхђ-sem (QvРібРЪеKvРЪЕR v)) Рђ║ РЪеРЪЕрхђрхњ-bind

  -- hor-nd :  {{ Inh РИе X╩И РИЕ╩И }} Рєњ
  --   (Рѕђ(x : РИе X╩И РИЕ╩И) Рєњ  P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ РѕЄ x РЪЕрхђ[ i ]  Q╦Ў)  Рєњ
  --   P  Ріб[ Рѕъ ]РЂ║РЪе ─ЕРѓЂ (-, K , ndр┤┐) РЪЕрхђ[ i ]  Q╦Ў

  РібРЂ║РЪеРЪЕрхђ-sem (hor-nd InhX PРібРЪеKxРЪЕQ) Pa =
    РЂ║РЪеРЪЕрхђрхњ-nd InhX ╬╗ x Рєњ Pa Рќи РібРЂ║РЪеРЪЕрхђ-sem (PРібРЪеKxРЪЕQ x)

  -- horрхђ-РќХ :  P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ e╦ѓ .! РЪЕрхђ[ i ]  Q╦Ў  Рєњ
  --           P  Ріб[ Рѕъ ]РЂ║РЪе ─ЕРѓЂ (-, K , РќХр┤┐ e╦ѓ) РЪЕрхђ[ i ]  Q╦Ў

  РібРЂ║РЪеРЪЕрхђ-sem (horрхђ-РќХ PРібРЪеKeРЪЕQ) =  РібРЂ║РЪеРЪЕрхђ-sem PРібРЪеKeРЪЕQ Рђ║ РЂ║РЪеРЪЕрхђрхњ-РќХ

  -- hor-РЌЂ :  P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ e╦Ў x РЪЕрхђ[ i ]  Q╦Ў  Рєњ
  --          P  Ріб[ Рѕъ ]РЂ║РЪе ─ЕРѓЂ (-, K , e╦Ў РЌЂр┤┐ x) РЪЕрхђ[ i ]  Q╦Ў

  РібРЂ║РЪеРЪЕрхђ-sem (hor-РЌЂ PРібРЪеKexРЪЕQ) =  РібРЂ║РЪеРЪЕрхђ-sem PРібРЪеKexРЪЕQ Рђ║ РЂ║РЪеРЪЕрхђрхњ-РЌЂ

  -- hor-РЂЈ :  P  Ріб[ ╬╣ ]РЪе K р┤иРЌЂ e РЪЕ[ w╬║ ]  Q╦Ў  Рєњ
  --          P  Ріб[ ╬╣ ]РЂ║РЪе ─ЕРѓЂ (-, K , _РЂЈр┤┐_ {T} v e) РЪЕ[ w╬║ ]  Q╦Ў

  РібРЂ║РЪеРЪЕрхђ-sem (hor-РЂЈ PРібРЪеKeРЪЕQ) =  РібРЂ║РЪеРЪЕрхђ-sem PРібРЪеKeРЪЕQ Рђ║ РЂ║РЪеРЪЕрхђрхњ-РЂЈ

  -- hor-fork :  P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ РѕЄ _ РЪЕрхђ[ i ]  R╦Ў  Рєњ
  --             Q  Ріб[ Рѕъ ]РЪе e РЪЕрхђ[ i ]  (╬╗ _ Рєњ Ріц')  Рєњ
  --             P  РѕЌ  Q  Ріб[ Рѕъ ]РЂ║РЪе ─ЕРѓЂ (-, K , forkр┤┐ e) РЪЕрхђ[ i ]  R╦Ў

  РібРЂ║РЪеРЪЕрхђ-sem (hor-fork PРібРЪеKРЪЕR QРібРЪеeРЪЕ) =
    РѕЌрхњ-mono (РібРЂ║РЪеРЪЕрхђ-sem PРібРЪеKРЪЕR) (РібРЂ║РЪеРЪЕрхђ-sem QРібРЪеeРЪЕ Рђ║ РЂ║РЪеРЪЕрхђрхњРЄњРЂ║РЪеРЪЕрхђрхњРіц) Рђ║ РЂ║РЪеРЪЕрхђрхњ-fork

  -- hor-­Ъъ░ :  ╬И РєдРЪе p РЪЕ (-, v)  РѕЌ  P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ VРЄњE v РЪЕрхђ[ i ]  Q╦Ў  Рєњ
  --          ╬И РєдРЪе p РЪЕ (-, v)  РѕЌ  P  Ріб[ Рѕъ ]РЂ║РЪе ─ЕРѓЂ (-, K , ­Ъъ░р┤┐ ╬И) РЪЕрхђ[ i ]  Q╦Ў

  РібРЂ║РЪеРЪЕрхђ-sem (hor-­Ъъ░ ╬ИРєдvРѕЌPРібРЪеKvРЪЕQ) =  РЂ║РЪеРЪЕрхђрхњ-­Ъъ░ $ РібРЂ║РЪеРЪЕрхђ-sem ╬ИРєдvРѕЌPРібРЪеKvРЪЕQ

  -- hor-Рєљ :  ╬И Рєд (-, v)  РѕЌ  P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ РѕЄ _ РЪЕрхђ[ i ]  Q╦Ў  Рєњ
  --          ╬И Рєд рхЌu  РѕЌ  P  Ріб[ Рѕъ ]РЂ║РЪе ─ЕРѓЂ (-, K , ╬И Рєљр┤┐ v) РЪЕрхђ[ i ]  Q╦Ў

  РібРЂ║РЪеРЪЕрхђ-sem (hor-Рєљ ╬ИРєдvРѕЌPРібРЪеKРЪЕQ) =  РЂ║РЪеРЪЕрхђрхњ-Рєљ $ РібРЂ║РЪеРЪЕрхђ-sem ╬ИРєдvРѕЌPРібРЪеKРЪЕQ

  -- hor-alloc :
  --   (Рѕђ ╬И Рєњ
  --     ╬И Рєдр┤И rep n Ріц-  РѕЌ  Free n ╬И  РѕЌ  P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ РѕЄ ╬И РЪЕрхђ[ i ]  Q╦Ў)  Рєњ
  --   P  Ріб[ Рѕъ ]РЂ║РЪе ─ЕРѓЂ (-, K , allocр┤┐ n) РЪЕрхђ[ i ]  Q╦Ў

  РібРЂ║РЪеРЪЕрхђ-sem (hor-alloc {n = n} ╬ИРєдРѕЌFreeРѕЌPРібРЪеK╬ИРЪЕQ) =  РЂ║РЪеРЪЕрхђрхњ-alloc ╬╗ ╬И Рєњ
    РѕЌрхњ-mono╦А (Рєдр┤ИрхњРЄњРєдр┤И {рхЌvs = rep n _}) Рђ║ РібРЂ║РЪеРЪЕрхђ-sem (╬ИРєдРѕЌFreeРѕЌPРібРЪеK╬ИРЪЕQ ╬И)

  -- hor-free :  len рхЌvs РЅА n  Рєњ   P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ РѕЄ _ РЪЕрхђ[ i ]  Q╦Ў  Рєњ
  --   ╬И Рєдр┤И рхЌvs  РѕЌ  Free n ╬И  РѕЌ  P  Ріб[ Рѕъ ]РЂ║РЪе ─ЕРѓЂ (-, K , freeр┤┐ ╬И) РЪЕрхђ[ i ]  Q╦Ў

  РібРЂ║РЪеРЪЕрхђ-sem (hor-free {рхЌvs} lenvsРЅАn PРібРЪеKРЪЕQ) =
    РѕЌрхњ-mono╦А (Рєдр┤ИРЄњРєдр┤Ирхњ {рхЌvs = рхЌvs}) Рђ║ РЂ║РЪеРЪЕрхђрхњ-free lenvsРЅАn (РібРЂ║РЪеРЪЕрхђ-sem PРібРЪеKРЪЕQ)

--------------------------------------------------------------------------------
-- РібРЂ║РЪеРЪЕр┤Й-sem :  Semantic soundness of the partial Hoare triple

abstract

  -- The metric of termination is the pair of the size ╬╣ and the structure of
  -- the proof Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕр┤Й; for РєфРЪеРЪЕр┤Й-use and horр┤Й-РќХ, the proof structure does
  -- not decrease but the size ╬╣ does, which is the key trick.

  РібРЂ║РЪеРЪЕр┤Й-sem : P  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕр┤Й  Q╦Ў  Рєњ   РИе P РИЕ  Ріе  РЂ║РЪе vk РЪЕр┤Йрхњ[ ╬╣ ] ╬╗ v Рєњ РИе Q╦Ў v РИЕ

  -- _┬╗_ :  P Ріб[ Рѕъ ] Q Рєњ  Q Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕр┤Й R╦Ў Рєњ  P Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕр┤Й R╦Ў

  РібРЂ║РЪеРЪЕр┤Й-sem (PРібQ ┬╗ QРібРЪеvkРЪЕR) =
    РіеРюЊРЄњРіе-РЂ║РЪеРЪЕр┤Йрхњ ╬╗ РюЊРѕЎ Рєњ Ріб-sem PРібQ РюЊРѕЎ Рђ║ РібРЂ║РЪеРЪЕр┤Й-sem QРібРЪеvkРЪЕR

  -- РѕЃ-elim :  (Рѕђ x Рєњ  P╦Ў x Ріб[ Рѕъ ][ i ]РЄЏ Q) Рєњ  РѕЃ╦Ў P╦Ў Ріб[ Рѕъ ][ i ]РЄЏ Q

  РібРЂ║РЪеРЪЕр┤Й-sem (РѕЃ-elim PxРібРЪеvkРЪЕQ) =   РѕЉ-case ╬╗ x Рєњ РібРЂ║РЪеРЪЕр┤Й-sem (PxРібРЪеvkРЪЕQ x)

  -- РєфРЪеРЪЕр┤Й-use :  P╦ѓ .!  РѕЌ  (P╦ѓ РєфРЪе e╦ѓ .! РЪЕр┤Й Q╦ѓ╦Ў)  Ріб[ Рѕъ ]РЪе РќХ e╦ѓ РЪЕр┤Й ╬╗ v Рєњ  Q╦ѓ╦Ў v .!

  РібРЂ║РЪеРЪЕр┤Й-sem РєфРЪеРЪЕр┤Й-use big =  РЂ║РЪеРЪЕр┤Йрхњ-РќХ ╬╗{ .! Рєњ РЄЏрхњ-РЂ║РЪеРЪЕр┤Йрхњ ╬╗ _ Рєњ big Рќи
    РѕЌрхњ-mono╩│ (РєфРЪеРЪЕр┤Йрхњ-use Рђ║ РЄЏр┤хРЂ┐рхѕРЄњРЄЏрхњ) Рќи РЄЏрхњ-eat╦А Рќи РЄЏрхњ-mono $ РѕЌрхњРѕЃрхњ-out Рђ║ ╬╗ (-, big) Рєњ
    РѕЌрхњРѕЃрхњ-out big Рќи ╬╗ (PРѕЌRРібРЪеeРЪЕQ , PRa) Рєњ РібРЂ║РЪеРЪЕр┤Й-sem PРѕЌRРібРЪеeРЪЕQ PRa }

  -- _рхў┬╗╩░_ :  P  Ріб[ Рѕъ ][ i ]РЄЏ  Q  Рєњ   Q  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕр┤Й  R╦Ў  Рєњ
  --          P  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕр┤Й  R╦Ў

  РібРЂ║РЪеРЪЕр┤Й-sem (PРібРЄЏQ рхў┬╗╩░ QРібРЪеvkРЪЕR) Pa =  РЄЏрхњ-РЂ║РЪеРЪЕр┤Йрхњ ╬╗ _ Рєњ Pa Рќи РібРЄЏ-sem PРібРЄЏQ Рќи
    РЄЏрхњ-mono $ РібРЂ║РЪеРЪЕр┤Й-sem QРібРЪеvkРЪЕR

  -- _╩░┬╗рхў_ :  P  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕр┤Й  Q╦Ў  Рєњ   (Рѕђ v Рєњ  Q╦Ў v  Ріб[ Рѕъ ][ i ]РЄЏ  R╦Ў v)  Рєњ
  --          P  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕр┤Й  R╦Ў

  РібРЂ║РЪеРЪЕр┤Й-sem (PРібРЪеvkРЪЕQ ╩░┬╗рхў QvРібРЄЏRv) =  РібРЂ║РЪеРЪЕр┤Й-sem PРібРЪеvkРЪЕQ Рђ║
    РЂ║РЪеРЪЕр┤Йрхњ-mono (╬╗ v Qva _ Рєњ РібРЄЏ-sem (QvРібРЄЏRv v) Qva) Рђ║ РЂ║РЪеРЪЕр┤Йрхњ-РЄЏрхњ

  -- hor-рхђРЄњр┤Й :  P  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕрхђ  Q╦Ў  Рєњ   P  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕр┤Й  Q╦Ў

  РібРЂ║РЪеРЪЕр┤Й-sem (hor-рхђРЄњр┤Й PРібРЪеvkРЪЕQ) =  РібРЂ║РЪеРЪЕрхђ-sem PРібРЪеvkРЪЕQ Рђ║ РЂ║РЪеРЪЕрхђрхњРЄњРЂ║РЪеРЪЕр┤Йрхњ

  -- hor-frame╦А :  P  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕр┤Й  Q╦Ў  Рєњ
  --               R  РѕЌ  P  Ріб[ Рѕъ ]РЂ║РЪе vk РЪЕр┤Й ╬╗ v Рєњ  R  РѕЌ  Q╦Ў v

  РібРЂ║РЪеРЪЕр┤Й-sem (hor-frame╦А PРібРЪеvkРЪЕQ) =  РѕЌрхњ-mono╩│ (РібРЂ║РЪеРЪЕр┤Й-sem PРібРЪеvkРЪЕQ ) Рђ║ РЂ║РЪеРЪЕр┤Йрхњ-eat╦А

  -- hor-valрхў :  P  РѕЌ  [ РіцрХ╗ ]р┤║  Ріб[ Рѕъ ][ i ]РЄЏ  Q╦Ў v  РѕЌ  [ РіцрХ╗ ]р┤║  Рєњ
  --             P  Ріб[ ╬╣ ]РЂ║РЪе ─ЕРѓђ v РЪЕр┤Й  Q╦Ў

  РібРЂ║РЪеРЪЕр┤Й-sem (hor-valрхў PРібРЄЏ[Ріц]Qv) Pa =  РЂ║РЪеРЪЕр┤Йрхњ-val ╬╗ _ Рєњ Pa Рќи РібРЄЏ-sem PРібРЄЏ[Ріц]Qv

  -- hor-bind :  P  Ріб[ Рѕъ ]РЪе e РЪЕр┤Й  Q╦Ў  Рєњ
  --             (Рѕђ v Рєњ  Q╦Ў v  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ VРЄњE v РЪЕр┤Й  R╦Ў)  Рєњ
  --             P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ e РЪЕр┤Й  R╦Ў

  РібРЂ║РЪеРЪЕр┤Й-sem (hor-bind PРібРЪеeРЪЕQ QvРібРЪеKvРЪЕR) =  РібРЂ║РЪеРЪЕр┤Й-sem PРібРЪеeРЪЕQ Рђ║
    РЂ║РЪеРЪЕр┤Йрхњ-mono (╬╗ v Рєњ РібРЂ║РЪеРЪЕр┤Й-sem (QvРібРЪеKvРЪЕR v)) Рђ║ РЪеРЪЕр┤Йрхњ-bind

  -- hor-nd :  {{ Inh РИе X╩И РИЕ╩И }} Рєњ
  --   (Рѕђ(x : РИе X╩И РИЕ╩И) Рєњ  P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ РѕЄ x РЪЕр┤Й  Q╦Ў)  Рєњ
  --   P  Ріб[ Рѕъ ]РЂ║РЪе ─ЕРѓЂ (-, K , ndр┤┐) РЪЕр┤Й  Q╦Ў

  РібРЂ║РЪеРЪЕр┤Й-sem (hor-nd InhX PРібРЪеKxРЪЕQ) Pa =
    РЂ║РЪеРЪЕр┤Йрхњ-nd InhX ╬╗ x Рєњ Pa Рќи РібРЂ║РЪеРЪЕр┤Й-sem (PРібРЪеKxРЪЕQ x)

  -- horр┤Й-РќХ :  P  Ріб[< Рѕъ ]РЪе K р┤иРЌЂ e╦ѓ .! РЪЕр┤Й  Q╦Ў  Рєњ
  --           P  Ріб[ Рѕъ ]РЂ║РЪе ─ЕРѓЂ (-, K , РќХр┤┐ e╦ѓ) РЪЕр┤Й  Q╦Ў

  РібРЂ║РЪеРЪЕр┤Й-sem (horр┤Й-РќХ PРібРЪеKeРЪЕQ) Pa =  РЂ║РЪеРЪЕр┤Йрхњ-РќХ ╬╗{ .! Рєњ РібРЂ║РЪеРЪЕр┤Й-sem (PРібРЪеKeРЪЕQ .!) Pa }

  -- hor-РЌЂ :  P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ e╦Ў x РЪЕр┤Й  Q╦Ў  Рєњ
  --          P  Ріб[ Рѕъ ]РЂ║РЪе ─ЕРѓЂ (-, K , e╦Ў РЌЂр┤┐ x) РЪЕр┤Й  Q╦Ў

  РібРЂ║РЪеРЪЕр┤Й-sem (hor-РЌЂ PРібРЪеKexРЪЕQ) =  РібРЂ║РЪеРЪЕр┤Й-sem PРібРЪеKexРЪЕQ Рђ║ РЂ║РЪеРЪЕр┤Йрхњ-РЌЂ

  -- hor-РЂЈ :  P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ e РЪЕр┤Й  Q╦Ў  Рєњ
  --          P  Ріб[ Рѕъ ]РЂ║РЪе ─ЕРѓЂ (-, K , v РЂЈр┤┐ e) РЪЕр┤Й  Q╦Ў

  РібРЂ║РЪеРЪЕр┤Й-sem (hor-РЂЈ PРібРЪеKeРЪЕQ) =  РібРЂ║РЪеРЪЕр┤Й-sem PРібРЪеKeРЪЕQ Рђ║ РЂ║РЪеРЪЕр┤Йрхњ-РЂЈ

  -- hor-fork :  P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ РѕЄ _ РЪЕр┤Й  R╦Ў  Рєњ
  --             Q  Ріб[ Рѕъ ]РЪе e РЪЕр┤Й  (╬╗ _ Рєњ Ріц')  Рєњ
  --             P  РѕЌ  Q  Ріб[ Рѕъ ]РЂ║РЪе ─ЕРѓЂ (-, K , forkр┤┐ e) РЪЕр┤Й  R╦Ў

  РібРЂ║РЪеРЪЕр┤Й-sem (hor-fork PРібРЪеKРЪЕR QРібРЪеeРЪЕ) =
    РѕЌрхњ-mono (РібРЂ║РЪеРЪЕр┤Й-sem PРібРЪеKРЪЕR) (РібРЂ║РЪеРЪЕр┤Й-sem QРібРЪеeРЪЕ Рђ║ РЂ║РЪеРЪЕр┤ЙрхњРЄњРЂ║РЪеРЪЕр┤ЙрхњРіц) Рђ║ РЂ║РЪеРЪЕр┤Йрхњ-fork

  -- hor-­Ъъ░ :  ╬И РєдРЪе p РЪЕ (-, v)  РѕЌ  P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ VРЄњE v РЪЕр┤Й  Q╦Ў  Рєњ
  --          ╬И РєдРЪе p РЪЕ (-, -, v)  РѕЌ  P  Ріб[ Рѕъ ]РЂ║РЪе ─ЕРѓЂ (K , ­Ъъ░р┤┐ ╬И) РЪЕр┤Й  Q╦Ў

  РібРЂ║РЪеРЪЕр┤Й-sem (hor-­Ъъ░ ╬ИРєдvРѕЌPРібРЪеKvРЪЕQ) =  РЂ║РЪеРЪЕр┤Йрхњ-­Ъъ░ $ РібРЂ║РЪеРЪЕр┤Й-sem ╬ИРєдvРѕЌPРібРЪеKvРЪЕQ

  -- hor-Рєљ :  ╬И Рєд (-, v)  РѕЌ  P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ РѕЄ _ РЪЕр┤Й  Q╦Ў  Рєњ
  --          ╬И Рєд рхЌu  РѕЌ  P  Ріб[ Рѕъ ]РЂ║РЪе ─ЕРѓЂ (-, K , ╬И Рєљр┤┐ v) РЪЕр┤Й  Q╦Ў

  РібРЂ║РЪеРЪЕр┤Й-sem (hor-Рєљ ╬ИРєдvРѕЌPРібРЪеKРЪЕQ) =  РЂ║РЪеРЪЕр┤Йрхњ-Рєљ $ РібРЂ║РЪеРЪЕр┤Й-sem ╬ИРєдvРѕЌPРібРЪеKРЪЕQ

  -- hor-alloc :
  --   (Рѕђ ╬И Рєњ  ╬И Рєдр┤И rep n Ріц-  РѕЌ  Free n ╬И  РѕЌ  P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ РѕЄ ╬И РЪЕр┤Й  Q╦Ў)  Рєњ
  --   P  Ріб[ Рѕъ ]РЂ║РЪе ─ЕРѓЂ (-, K , allocр┤┐ n) РЪЕр┤Й  Q╦Ў

  РібРЂ║РЪеРЪЕр┤Й-sem (hor-alloc {n = n} ╬ИРєдРѕЌFreeРѕЌPРібРЪеK╬ИРЪЕQ) =  РЂ║РЪеРЪЕр┤Йрхњ-alloc ╬╗ ╬И Рєњ
    РѕЌрхњ-mono╦А (Рєдр┤ИрхњРЄњРєдр┤И {рхЌvs = rep n _}) Рђ║ РібРЂ║РЪеРЪЕр┤Й-sem (╬ИРєдРѕЌFreeРѕЌPРібРЪеK╬ИРЪЕQ ╬И)

  -- hor-free :  len рхЌvs РЅА n  Рєњ   P  Ріб[ Рѕъ ]РЪе K р┤иРЌЂ РѕЄ _ РЪЕр┤Й  Q╦Ў  Рєњ
  --   ╬И Рєдр┤И рхЌvs  РѕЌ  Free n ╬И  РѕЌ  P  Ріб[ Рѕъ ]РЂ║РЪе ─ЕРѓЂ (-, K , freeр┤┐ ╬И) РЪЕр┤Й  Q╦Ў

  РібРЂ║РЪеРЪЕр┤Й-sem (hor-free {рхЌvs} lenvsРЅАn PРібРЪеKРЪЕQ) =
    РѕЌрхњ-mono╦А (Рєдр┤ИРЄњРєдр┤Ирхњ {рхЌvs = рхЌvs}) Рђ║ РЂ║РЪеРЪЕр┤Йрхњ-free lenvsРЅАn (РібРЂ║РЪеРЪЕр┤Й-sem PРібРЪеKРЪЕQ)
