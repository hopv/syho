--------------------------------------------------------------------------------
-- Semantic super update and weakest precondition lemmas for the memory
--------------------------------------------------------------------------------

{-# OPTIONS --without-K --sized-types #-}

module Syho.Model.Hor.Mem where

open import Base.Level using (Level)
open import Base.Func using (_$_; _Рќи_; _Рђ║_)
open import Base.Eq using (_РЅА_; refl; РЌа_; _РЌЄ_; cong)
open import Base.Dec using (upd╦Ў)
open import Base.Size using (Size; Рѕъ; !; ┬Д_)
open import Base.Option using (┼А_; ┼ѕ; ┼А-inj)
open import Base.Prod using (РѕЉ-syntax; ¤ђРѓЂ; _,_; -,_; РЅАРѕЉРЄњ¤ђРѓЂРЅА)
open import Base.Nat using (РёЋ)
open import Base.List using (List; len; rep)
open import Base.RatPos using (РёџРЂ║)
open import Syho.Lang.Expr using (Addr; Type; РѕЄ_; Val; TyVal; Ріц-)
open import Syho.Lang.Ktxred using (­Ъъ░р┤┐_; _Рєљр┤┐_; allocр┤┐; freeр┤┐)
open import Syho.Lang.Reduce using (Mem; _Рђ╝р┤╣_; updр┤╣; ­Ъъ░РЄњ; РєљРЄњ; allocРЄњ; freeРЄњ;
  РюЊр┤╣-РѕЉ┼ѕ)
open import Syho.Model.ERA.Glob using (upd╦Ў-mem-envр┤│)
open import Syho.Model.ERA.Mem using (╬хр┤╣рхЅрхљ; РєдРЪеРЪЕ╩│-read; Рєд╩│-write; Рєдр┤И╩│-alloc;
  free╩│-┼А; Рєдр┤И╩│-free)
open import Syho.Model.Prop.Base using (Propрхњ; _Ріе_; Ріе_; Рїю_РїЮрхњ├Ќ_; РіцрхњРѓђ; _РѕЌрхњ_;
  _РцЄр┤▒_; РѕЌрхњ-mono; РѕЌрхњ-mono╦А; РѕЌрхњ-mono╩│; РѕЌрхњ-assoc╦А; РѕЌрхњ-assoc╩│; ?РѕЌрхњ-comm; ?РѕЌрхњ-intro;
  РѕЌрхњ?-intro; РѕЌрхњ-elim╩│; РѕЃрхњРѕЌрхњ-out; РцЄр┤▒-mono; РцЄр┤▒-respр┤▒╩│; РцЄр┤▒-param; РЌјРЪеРЪЕ-РѕЌрхњРЄњРѕЎ;
  РЌјРЪеРЪЕ-РѕЎРЄњРѕЌрхњ; РєЮ-РЌјРЪеРЪЕ-РцЄр┤▒; ╬хРєЮ-РЌјРЪеРЪЕ-РцЄр┤▒)
open import Syho.Model.Prop.Mem using (_РєдРЪе_РЪЕрхњ_; _Рєдрхњ_; Freeрхњ'; Freeрхњ; _Рєдр┤Ирхњ_;
  _Рєдр┤Ирхњ'_; Рєдр┤ИрхњРЄњРєдр┤Ирхњ'; Рєдр┤Ирхњ'РЄњРєдр┤Ирхњ)
open import Syho.Model.Supd.Interp using (РЪе_РЪЕРЄЏрхњРЪе_РЪЕ_; РЄЏрхњ-mono; ?РіеРцЄр┤▒р┤╣рхЅрхљРЄњ?РіеРЄЏрхњ;
  РіеРцЄр┤▒р┤╣рхЅрхљРЄњРіеРЄЏрхњ; РЄЏрхњ-intro; РЄЏрхњ-intro-РюЊр┤╣)
open import Syho.Model.Hor.Wp using (рхЃРЪе_РЪЕрхњ_)

private variable
  ┼ѓ :  Level
  ╬╣ :  Size
  X :  SetРѓђ
  T U :  Type
  Pрхњ Qрхњ :  Propрхњ ┼ѓ
  Qрхњ╦Ў :  X Рєњ Propрхњ ┼ѓ
  M M' :  Mem
  ╬И :  Addr
  p :  РёџРЂ║
  o n :  РёЋ
  рхЌu рхЌv :  TyVal
  рхЌvs :  List TyVal
  u v :  X

--------------------------------------------------------------------------------
-- Semantic super update for the memory

abstract

  -- Read using РєдРЪеРЪЕрхњ

  РєдРЪеРЪЕрхњ-read :  ╬И РєдРЪе p РЪЕрхњ рхЌv  Ріе РЪе M РЪЕРЄЏрхњРЪе M РЪЕ
                 Рїю M Рђ╝р┤╣ ╬И РЅА ┼А рхЌv РїЮрхњ├Ќ  ╬И РєдРЪе p РЪЕрхњ рхЌv
  РєдРЪеРЪЕрхњ-read =  ?РіеРцЄр┤▒р┤╣рхЅрхљРЄњ?РіеРЄЏрхњ $ РєЮ-РЌјРЪеРЪЕ-РцЄр┤▒ РєдРЪеРЪЕ╩│-read Рђ║ РцЄр┤▒-respр┤▒╩│ upd╦Ў-mem-envр┤│ Рђ║
    РцЄр┤▒-mono (╬╗ MРђ╝╬ИРЅАv Рєњ  MРђ╝╬ИРЅАv ,_) Рђ║ РцЄр┤▒-param

  -- Write using Рєдрхњ

  Рєдрхњ-write :  ╬И Рєдрхњ рхЌu  Ріе РЪе M РЪЕРЄЏрхњРЪе updр┤╣ ╬И рхЌv M РЪЕ  ╬И Рєдрхњ рхЌv
  Рєдрхњ-write =  ?РіеРцЄр┤▒р┤╣рхЅрхљРЄњ?РіеРЄЏрхњ $ РєЮ-РЌјРЪеРЪЕ-РцЄр┤▒ Рєд╩│-write Рђ║ РцЄр┤▒-respр┤▒╩│ upd╦Ў-mem-envр┤│

  -- Allocate to get Рєдр┤Ирхњ' and Freeрхњ'

  Рєдр┤Ирхњ'-alloc :  M o РЅА ┼ѕ  Рєњ
    Ріе РЪе M РЪЕРЄЏрхњРЪе upd╦Ў o (┼А rep n Ріц-) M РЪЕ  o Рєдр┤Ирхњ' rep n Ріц-  РѕЌрхњ  Freeрхњ' n o
  Рєдр┤Ирхњ'-alloc MoРЅА┼ѕ =  РіеРцЄр┤▒р┤╣рхЅрхљРЄњРіеРЄЏрхњ (╬хРєЮ-РЌјРЪеРЪЕ-РцЄр┤▒ (Рєдр┤И╩│-alloc MoРЅА┼ѕ) Рќи
    РцЄр┤▒-respр┤▒╩│ upd╦Ў-mem-envр┤│ Рќи РцЄр┤▒-mono ╬╗ _ Рєњ РЌјРЪеРЪЕ-РѕЎРЄњРѕЌрхњ)

  -- Bounds check using Freeрхњ'

  Freeрхњ'-┼А :  Freeрхњ' n o  Ріе РЪе M РЪЕРЄЏрхњРЪе M РЪЕ  Рїю РѕЉ рхЌvs , M o РЅА ┼А рхЌvs РїЮрхњ├Ќ  Freeрхњ' n o
  Freeрхњ'-┼А =  ?РіеРцЄр┤▒р┤╣рхЅрхљРЄњ?РіеРЄЏрхњ $ РєЮ-РЌјРЪеРЪЕ-РцЄр┤▒ free╩│-┼А Рђ║ РцЄр┤▒-respр┤▒╩│ upd╦Ў-mem-envр┤│ Рђ║
    РцЄр┤▒-mono (╬╗ MoРЅАvs Рєњ  MoРЅАvs ,_) Рђ║ РцЄр┤▒-param

  -- Free using Рєдр┤Ирхњ' and Freeрхњ'

  Рєдр┤Ирхњ'-free :  len рхЌvs РЅА n  Рєњ
    o Рєдр┤Ирхњ' рхЌvs  РѕЌрхњ  Freeрхњ' n o  Ріе РЪе M РЪЕРЄЏрхњРЪе upd╦Ў o ┼ѕ M РЪЕ  РіцрхњРѓђ
  Рєдр┤Ирхњ'-free lenvsРЅАn =  ?РіеРцЄр┤▒р┤╣рхЅрхљРЄњ?РіеРЄЏрхњ $ РЌјРЪеРЪЕ-РѕЌрхњРЄњРѕЎ Рђ║
    РєЮ-РЌјРЪеРЪЕ-РцЄр┤▒ {bРЂ▒╦Ў = ╬╗ _ Рєњ ╬хр┤╣рхЅрхљ} (Рєдр┤И╩│-free lenvsРЅАn) Рђ║ РцЄр┤▒-respр┤▒╩│ upd╦Ў-mem-envр┤│ Рђ║
    РцЄр┤▒-mono _

--------------------------------------------------------------------------------
-- Atomic weakest precondition lemmas for the memory

abstract

  -- ­Ъъ░ and рхЃРЪеРЪЕрхњ

  рхЃРЪеРЪЕрхњ-­Ъъ░ :  ╬И РєдРЪе p РЪЕрхњ (T , v)  Ріе рхЃРЪе ­Ъъ░р┤┐_ {T} ╬И РЪЕрхњ ╬╗ u Рєњ
              Рїю u РЅА v РїЮрхњ├Ќ  ╬И РєдРЪе p РЪЕрхњ (T , v)
  рхЃРЪеРЪЕрхњ-­Ъъ░ ╬ИРєдv _ =  РєдРЪеРЪЕрхњ-read ╬ИРєдv Рќи РЄЏрхњ-mono ╬╗ (MРђ╝╬ИРЅАv , ╬ИРєдv) Рєњ (-, ­Ъъ░РЄњ MРђ╝╬ИРЅАv) ,
    ╬╗{ _ _ _ (­Ъъ░РЄњ MРђ╝╬ИРЅАv') Рєњ -, (refl , refl) ,(РЌа MРђ╝╬ИРЅАv РЌЄ MРђ╝╬ИРЅАv') Рќи ┼А-inj Рќи
    РЅАРѕЉРЄњ¤ђРѓЂРЅА Рќи ╬╗{ refl Рєњ РЄЏрхњ-intro (refl , ╬ИРєдv) }}

  -- Рєљ and рхЃРЪеРЪЕрхњ

  рхЃРЪеРЪЕрхњ-Рєљ :  ╬И Рєдрхњ рхЌu  Ріе рхЃРЪе _Рєљр┤┐_ {T} ╬И v РЪЕрхњ ╬╗ _ Рєњ  ╬И Рєдрхњ (T , v)
  рхЃРЪеРЪЕрхњ-Рєљ ╬ИРєд _ =  РєдРЪеРЪЕрхњ-read ╬ИРєд Рќи РЄЏрхњ-mono ╬╗ (MРђ╝╬ИРЅА , ╬ИРєд) Рєњ (-, РєљРЄњ (-, MРђ╝╬ИРЅА)) ,
    ╬╗{ _ _ _ (РєљРЄњ _) Рєњ -, (refl , refl) , Рєдрхњ-write ╬ИРєд }

{-
  -- alloc and РЂ║РЪеРЪЕр┤Й/рхђрхњ

  РЂ║РЪеРЪЕр┤Йрхњ-alloc :
    (Рѕђ ╬И Рєњ
      ╬И Рєдр┤Ирхњ rep n Ріц-  РѕЌрхњ  Freeрхњ n ╬И  РѕЌрхњ  Pрхњ  Ріе  РЪе K р┤иРЌЂ РѕЄ ╬И РЪЕр┤Йрхњ[ ╬╣ ]  Qрхњ╦Ў)  Рєњ
    Pрхњ  Ріе  РЂ║РЪе ─ЕРѓЂ (-, K , allocр┤┐ n) РЪЕр┤Йрхњ[ ╬╣ ]  Qрхњ╦Ў
  РЂ║РЪеРЪЕр┤Йрхњ-alloc {n = n} ╬ИРєдРѕЌFreeРѕЌPРіеРЪеK╬ИРЪЕQ Pa =  РЂ║РЪеРЪЕр┤Йрхњ-kr ╬╗ M Рєњ
    РЄЏрхњ-mono (╬╗ (РюЊM , big) Рєњ (-, redр┤ир┤┐ (allocРЄњ _ $ РюЊр┤╣-РѕЉ┼ѕ РюЊM .¤ђРѓЂ)) , big) $
    РЄЏрхњ-intro-РюЊр┤╣ ╬╗{ _ _ _ (redр┤ир┤┐ (allocРЄњ o MoРЅА┼ѕ)) Рєњ Pa Рќи
    ?РѕЌрхњ-intro (Рєдр┤Ирхњ'-alloc MoРЅА┼ѕ) Рќи РЄЏрхњ-eat╩│ Рќи РЄЏрхњ-mono $
    РѕЌрхњ-mono╦А (РѕЌрхњ-mono (Рєдр┤Ирхњ'РЄњРєдр┤Ирхњ {рхЌvs = rep n _}) (╬╗ Fr'b Рєњ -, refl , Fr'b)) Рђ║
    РѕЌрхњ-assoc╦А Рђ║ ╬ИРєдРѕЌFreeРѕЌPРіеРЪеK╬ИРЪЕQ _ Рђ║ ╬╗ big Рєњ РѕЌрхњ?-intro _ $ ╬╗{ .! Рєњ big }}

  РЂ║РЪеРЪЕрхђрхњ-alloc :
    (Рѕђ ╬И Рєњ
      ╬И Рєдр┤Ирхњ rep n Ріц-  РѕЌрхњ  Freeрхњ n ╬И  РѕЌрхњ  Pрхњ  Ріе  РЪе K р┤иРЌЂ РѕЄ ╬И РЪЕрхђрхњ[ ╬╣ ]  Qрхњ╦Ў)  Рєњ
    Pрхњ  Ріе  РЂ║РЪе ─ЕРѓЂ (-, K , allocр┤┐ n) РЪЕрхђрхњ[ Рѕъ ] Qрхњ╦Ў
  РЂ║РЪеРЪЕрхђрхњ-alloc {n} ╬ИРєдРѕЌFreeРѕЌPРіеРЪеK╬ИРЪЕQ Pa =  РЂ║РЪеРЪЕрхђрхњ-kr ╬╗ M Рєњ
    РЄЏрхњ-mono (╬╗ (РюЊM , big) Рєњ (-, redр┤ир┤┐ (allocРЄњ _ $ РюЊр┤╣-РѕЉ┼ѕ РюЊM .¤ђРѓЂ)) , big) $
    РЄЏрхњ-intro-РюЊр┤╣ ╬╗{ _ _ _ (redр┤ир┤┐ (allocРЄњ o MoРЅА┼ѕ)) Рєњ Pa Рќи
    ?РѕЌрхњ-intro (Рєдр┤Ирхњ'-alloc MoРЅА┼ѕ) Рќи РЄЏрхњ-eat╩│ Рќи РЄЏрхњ-mono $
    РѕЌрхњ-mono╦А (РѕЌрхњ-mono (Рєдр┤Ирхњ'РЄњРєдр┤Ирхњ {рхЌvs = rep n _}) (╬╗ Fr'b Рєњ -, refl , Fr'b)) Рђ║
    РѕЌрхњ-assoc╦А Рђ║ ╬ИРєдРѕЌFreeРѕЌPРіеРЪеK╬ИРЪЕQ _ Рђ║ ┬Д_ Рђ║ РѕЌрхњ?-intro _ }

  -- free and РЂ║РЪеРЪЕр┤Й/рхђрхњ

  РЂ║РЪеРЪЕр┤Йрхњ-free :  len рхЌvs РЅА n  Рєњ   Pрхњ  Ріе  РЪе K р┤иРЌЂ РѕЄ _ РЪЕр┤Йрхњ[ ╬╣ ] Qрхњ╦Ў  Рєњ
    ╬И Рєдр┤Ирхњ рхЌvs  РѕЌрхњ  Freeрхњ n ╬И  РѕЌрхњ  Pрхњ  Ріе  РЂ║РЪе ─ЕРѓЂ (-, K , freeр┤┐ ╬И) РЪЕр┤Йрхњ[ ╬╣ ] Qрхњ╦Ў
  РЂ║РЪеРЪЕр┤Йрхњ-free {рхЌvs} lenvsРЅАn PРіеРЪеKРЪЕQ ╬ИРєдvsРѕЌFreeРѕЌPa
    with ╬ИРєдvsРѕЌFreeРѕЌPa Рќи ?РѕЌрхњ-comm Рќи РѕЃрхњРѕЌрхњ-out Рќи (╬╗ (o , big) Рєњ o , РѕЃрхњРѕЌрхњ-out big)
  Рђд | o , refl , Free'РѕЌ╬ИРєдvsРѕЌPa =  РЂ║РЪеРЪЕр┤Йрхњ-kr ╬╗ M Рєњ Free'РѕЌ╬ИРєдvsРѕЌPa Рќи
    РѕЌрхњ-mono╦А Freeрхњ'-┼А Рќи РЄЏрхњ-eat╩│ Рќи РЄЏрхњ-mono $ РѕЃрхњРѕЌрхњ-out Рђ║ ╬╗ (MoРЅА┼А , Free'РѕЌ╬ИРєдvsРѕЌPb) Рєњ
    (-, redр┤ир┤┐ $ freeРЄњ MoРЅА┼А) , ╬╗{ _ _ _ (redр┤ир┤┐ (freeРЄњ _)) Рєњ Free'РѕЌ╬ИРєдvsРѕЌPb Рќи
    ?РѕЌрхњ-comm Рќи РѕЌрхњ-mono╦А (Рєдр┤ИрхњРЄњРєдр┤Ирхњ' {рхЌvs = рхЌvs}) Рќи РѕЌрхњ-assoc╩│ Рќи
    РѕЌрхњ-mono╦А (Рєдр┤Ирхњ'-free lenvsРЅАn) Рќи РЄЏрхњ-eat╩│ Рќи РЄЏрхњ-mono $ РѕЌрхњ-mono╩│ PРіеРЪеKРЪЕQ Рђ║
    РѕЌрхњ-elim╩│ РЂ║РЪеРЪЕр┤Йрхњ-Mono Рђ║ ╬╗ big Рєњ РѕЌрхњ?-intro _ ╬╗{ .! Рєњ big }}

  РЂ║РЪеРЪЕрхђрхњ-free :  len рхЌvs РЅА n  Рєњ   Pрхњ  Ріе  РЪе K р┤иРЌЂ РѕЄ _ РЪЕрхђрхњ[ ╬╣ ] Qрхњ╦Ў  Рєњ
    ╬И Рєдр┤Ирхњ рхЌvs  РѕЌрхњ  Freeрхњ n ╬И  РѕЌрхњ  Pрхњ  Ріе  РЂ║РЪе ─ЕРѓЂ (-, K , freeр┤┐ ╬И) РЪЕрхђрхњ[ Рѕъ ] Qрхњ╦Ў
  РЂ║РЪеРЪЕрхђрхњ-free {рхЌvs} lenvsРЅАn PРіеРЪеKРЪЕQ ╬ИРєдvsРѕЌFreeРѕЌPa
    with ╬ИРєдvsРѕЌFreeРѕЌPa Рќи ?РѕЌрхњ-comm Рќи РѕЃрхњРѕЌрхњ-out Рќи (╬╗ (o , big) Рєњ o , РѕЃрхњРѕЌрхњ-out big)
  Рђд | o , refl , Free'РѕЌ╬ИРєдvsРѕЌPa =  РЂ║РЪеРЪЕрхђрхњ-kr ╬╗ M Рєњ Free'РѕЌ╬ИРєдvsРѕЌPa Рќи
    РѕЌрхњ-mono╦А Freeрхњ'-┼А Рќи РЄЏрхњ-eat╩│ Рќи РЄЏрхњ-mono $ РѕЃрхњРѕЌрхњ-out Рђ║ ╬╗ (MoРЅА┼А , Free'РѕЌ╬ИРєдvsРѕЌPb) Рєњ
    (-, redр┤ир┤┐ $ freeРЄњ MoРЅА┼А) , ╬╗{ _ _ _ (redр┤ир┤┐ (freeРЄњ _)) Рєњ Free'РѕЌ╬ИРєдvsРѕЌPb Рќи
    ?РѕЌрхњ-comm Рќи РѕЌрхњ-mono╦А (Рєдр┤ИрхњРЄњРєдр┤Ирхњ' {рхЌvs = рхЌvs}) Рќи РѕЌрхњ-assoc╩│ Рќи
    РѕЌрхњ-mono╦А (Рєдр┤Ирхњ'-free lenvsРЅАn) Рќи РЄЏрхњ-eat╩│ Рќи РЄЏрхњ-mono $ РѕЌрхњ-mono╩│ PРіеРЪеKРЪЕQ Рђ║
    РѕЌрхњ-elim╩│ РЂ║РЪеРЪЕрхђрхњ-Mono Рђ║ ┬Д_ Рђ║ РѕЌрхњ?-intro _ }
-}